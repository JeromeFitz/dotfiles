sandbox_init_nvm(){
  [[ -s "$BREW_PREFIX/opt/nvm/nvm.sh" ]] && source "$BREW_PREFIX/opt/nvm/nvm.sh"
  # nvm: completions
  [ -s "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" ] && . "$BREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm"
}
sandbox_hook nvm node

sandbox_init_pyenv() {
  if (( $+commands[pyenv] )); then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
  fi

  if (( $+commands[pyenv-virtualenv-init] )); then
    eval "$(pyenv virtualenv-init -)"
  fi
}
sandbox_hook_shims pyenv # "$HOME/.pyenv/shims"

sandbox_init_ruby() {
  if (( $+commands[rbenv] ))
  then
    eval "$(rbenv init -)"
  fi

  # (c) @sstephenson
  # ref:  https://github.com/sstephenson/rbenv/blob/master/completions/rbenv.zsh

  if [[ ! -o interactive ]]; then
      return
  fi

  compctl -K _rbenv rbenv

  _rbenv() {
    local word words completions
    read -cA words
    word="${words[2]}"

    if [ "${#words}" -eq 2 ]; then
      completions="$(rbenv commands)"
    else
      completions="$(rbenv completions "${word}")"
    fi

    reply=("${(ps:\n:)completions}")
  }
}
sandbox_hook_shims ruby "$HOME/.rbenv/shims"

sandbox_init_yarn(){
  if (( $+commands[yarn] ))
  then
    export PATH="$PATH:`yarn global bin`"
  fi
}
# sandbox_hook yarn
